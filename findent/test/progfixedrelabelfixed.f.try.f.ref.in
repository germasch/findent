! --relabel=200,2 --relabel-reset=0
      module points
         type :: point
            real :: x,y
         end type point
         interface
            real module function point_dist(a,b)
               type(point), intent(in) :: a,b
            end function point_dist
         end interface
         interface inter
            module procedure fun
         end interface
      contains
         real function fun(x)
            real x
            fun = a+10
         end
      end module

      submodule (points) points_a
      contains
         subroutine x
            goto 200
  200       continue
         end subroutine

         module procedure point_dist
            continue
            goto 202
  202       continue
            write(*,*) "hoppa"
            point_dist = sqrt((a%x-b%x)**2+(a%y-b%y)**2)
         end procedure
      end submodule

      subroutine mysub(*,i,k,*,*)
         return 1
      end
      subroutine mysubomp
!$       do 204 i=1,20
!$          do 204 j=1,10
!$             continue
!$204    continue
      end subroutine

      subroutine mysub1
  206    continue
      end

      subroutine mysub2(i)
         return
      end

      function myfun(x,i)
         goto (208,210,212) i
#ifdef xyz
  208    myfun = 10*x; goto 214
#endif
  210    myfun = 20*x; goto 214
  212    myfun = 30*x; goto 214
#ifndef xyz
  208    myfun = 20*x; goto 214
#endif
  214 end function myfun


      program p
         integer jf(2)
         jf(1) = 10
  216    continue ;  x=
     &     y+10 ; continue ; z = 123 +
     &     12345
  218    continue;  continue ;  continue
         do 224 i=1,20; do 222 j=1,20 ; do 220 k=0,4
                  x = x+1
  220          continue
  222       continue;
  224    continue
         do 226 i=1,3
            do 226, j=1,4
               do 226 k=1,2
  226    l=l+i+j+k

         do 228    i=1,3;;x=y;
  228    continue
         do 230, i=1,2
            continue
  230    continue
         do 232
            exit
  232    continue
         do 234 while(i .eq. i+1)
            l = l+10
  234    continue
         do 238  , while(j .eq. j+1)
            do 236, while(j .eq. j+1)
  236       continue;
  238    continue

         goto 240; if (0.eq.1) goto 242
  240    continue
  242    continue

         if(x) 252,254,256 ;
  244    goto 254; goto 252
  246    goto 256
         if(x) 252,
! comment
     &      254,    !comment
     &      256 ;
  248    goto 254; goto 252
  250    goto 256

#if 0
         if(l) 252,254
#endif
         continue
  252    continue
  254    continue
  256    continue

         goto( 252, 254,
!   comment
     &      256, 260) 4
         if(x.eq.2)goto( 252, 254,
!   comment
     &      256, 242),i ; goto 260 ; goto 262
         assign 260 to ixyz
         goto ixyz (252,254,256,260)
         if(0 .eq. x)goto ixyz, (252,254,
!  comment
     &      256,262); goto 264
  258    format(3i5)
  260    read 258
         if(1.eq.0) read 258
         read 258,i,j,k
         if(1.eq.0)read 258,i,j,k
  262    print 258
         if(1.eq.0)print 258
         print 258,i,
     &      j,k;goto 264
         if(1.eq.0)  print 258,i,
     &      j,k;goto 264
         close (10)
         endfile 10
         read '(i5)', i
         if(1.eq.0)read '(i5)', i
         read 266,i,j,k
         if(1.eq.0)read        266,i,j,k
         close(10,err=264)
         if(1.eq.0)close(10,err=264)
         open(10,err=264)
         if(1.eq.0)open(10,err=264)
         close(jf(1),err=264)
         if(1.eq.0)close(jf(1),err=264)
         endfile(9,err=264)
         if(1.eq.0)endfile(9,err=264)
         rewind(9,err=264)
         if(1.eq.0)rewind(9,err=264)
         flush(9,err=264)
         if(1.eq.0)flush(9,err=264)
         backspace(9,err=264)
         inquire(9,err=264)
         wait(9,err=264)
         wait(9,end=264)
         wait(9,eor=264)
         write(jf(i),266)
         read(*,'(a80)')
         read(*,fmt="(a80)")
         read(5,266,err=264,iostat=i,eor=264,advance='no',end=264)
         if(1.eq.0)backspace(9,err=264); if(1.eq.0)inquire(9,err=264)
         if(1.eq.0)wait(9,err=264)
         if(1.eq.0)wait(9,end=264)
         if(1.eq.0)wait(9,eor=264)
         if(1.eq.0)write(jf(i),266)
         if(1.eq.0)read(*,'(a80)')
         if(1.eq.0)read(*,fmt="(a80)")
         if(1.eq.0)read(5,266,err=264,iostat=i,eor=264,advance='no',end=264)
         read(5,err=264,fmt='(3i3)',
     &    end=264) i,j,k
         write(6,266) i,j,k
         write(*,266) x
         write(6,fmt=266)i,j,k
         if(i.eq.0)read(5,err=264,fmt='(3i3)',
     &    end=264) i,j,k
         if(i.eq.0)write(6,266) i,j,k
         if(i.eq.0)write(*,266) x
         if(i.eq.0)write(6,fmt=266)i,j,k
  264    continue
  266    format(3i5)
         call mysub(*268,ixyz,j,*270,*272)
         if(1.eq.3)
     &   call mysub(*268,ixyz,j,*270,*272)
         call mysub1
         call mysub1()
         call mysub2(klm)
         call mysub(*268,3*400,3**4,*270,*272)
         call mysub(*268,ij*400,3**ij,*270,*272)
         call mysub(*268,ij*klm,3**4,*270,*272)
         if(1.eq.0)call mysub1
         if(1.eq.0)call mysub1()
         if(1.eq.0)call mysub2(klm)
         if(1.eq.0)call mysub(*268,3*400,3**4,*270,*272)
         if(1.eq.0)call mysub(*268,ij*400,3**ij,*270,*272)
         if(1.eq.0)call mysub(*268,ij*klm,3**4,*270,*272)

  268    continue
  270    continue
  272    continue
      contains
         real function f(x)
            goto 274
  274       continue
            f = 10*x
         end function f
         subroutine subx
            goto 276
  276       continue
         end subroutine subx
      end

      subroutine subx1
         ! test following the man page
#if 0
  278    ...         ! statement or format label
         IF(...) 292,294,296
         IF(...) 292,294
         DO 280 I=X,...
  280    continue
         DO 282, I=X,...
  282    continue
         DO 284 WHILE(...)
  284    continue
         DO 286, WHILE(...)
  286    continue
         DO 288
  288    continue
         ACCEPT 290...
         ASSIGN 290 TO I
         BACKSPACE(...,ERR=290,...)
         CALL I(...,*290,...,&292,...,$294)
         CLOSE(...,ERR=290,...)
         DECODE(...,290,...,ERR=292,...)
         DELETE(...,ERR=292,...)
         ENCODE(...,290,...,ERR=292,...)
         ENDFILE(...,ERR=290,...)
         FIND(...,ERR=292,...)
         FLUSH(...,ERR=290,...)
         GOTO 290
         GOTO I(290,292,294)
         GOTO I,(290,292,294)
         GOTO(290,292,294)...
         INQUIRE(...,ERR=290,...)
         OPEN(...,ERR=290,...)
         PRINT 290...
         READ 290...
         READ(...,290,...)
         READ(...,ERR=290,...,END=292,EOR=294,...,FMT=296)...
         REREAD 290...
         REREAD(...,290,...)
         REREAD(...,ERR=290,...,END=292,EOR=294,...,FMT=296)...
         REWIND(...,ERR=290,...)
         REWRITE(...,290) ...
         REWRITE(...,ERR=290,...,FMT=292,...,EOR=294)...
         TYPE 290...
         WAIT(...,ERR=290,...,END=292,...,EOR=294,...)
         WRITE(...,290) ...
         WRITE(...,ERR=290,...,FMT=292,...,EOR=294)...
#endif
  290    continue
  292    continue
  294    continue
  296    continue
      end subroutine subx1

      subroutine subx2
#if 0

         if(...)  ACCEPT 298...
         if(...)  ASSIGN 298 TO I
         if(...)  BACKSPACE(...,ERR=298,...)
         if(...)  CALL I(...,*298,...,&300,...,$302)
         if(...)  CLOSE(...,ERR=298,...)
         if(...)  DECODE(...,298,...,ERR=300,...)
         if(...)  DELETE(...,ERR=300,...)
         if(...)  ENCODE(...,298,...,ERR=300,...)
         if(...)  ENDFILE(...,ERR=298,...)
         if(...)  FIND(...,ERR=300,...)
         if(...)  FLUSH(...,ERR=298,...)
         if(...)  GOTO 298
         if(...)  GOTO I(298,300,302)
         if(...)  GOTO I,(298,300,302)
         if(...)  GOTO(298,300,302)...
         if(...)  INQUIRE(...,ERR=298,...)
         if(...)  OPEN(...,ERR=298,...)
         if(...)  PRINT 298...
         if(...)  READ 298...
         if(...)  READ(...,298,...)
         if(...)  READ(...,ERR=298,...,END=300,EOR=302,...,FMT=304)...
         if(...)  REREAD 298...
         if(...)  REREAD(...,298,...)
         if(...)  REREAD(...,ERR=298,...,END=300,EOR=302,...,FMT=304)...
         if(...)  REWIND(...,ERR=298,...)
         if(...)  REWRITE(...,298) ...
         if(...)  REWRITE(...,ERR=298,...,FMT=300,...,EOR=302)...
         if(...)  TYPE 298...
         if(...)  WAIT(...,ERR=298,...,END=300,...,EOR=302,...)
         if(...)  WRITE(...,298) ...
         if(...)  WRITE(...,ERR=298,...,FMT=300,...,EOR=302)...
#endif
  298    continue
  300    continue
  302    continue
  304    continue
      end subroutine

      subroutine suby1
         ! same as subx, now with omp
#if 0
!$306    ...         ! statement or format label
!$       IF(...) 320,322,324
!$       IF(...) 320,322
!$       DO 308 I=X,...
!$308    continue
!$       DO 310, I=X,...
!$310    continue
!$       DO 312 WHILE(...)
!$312    continue
!$       DO 314, WHILE(...)
!$314    continue
!$       DO 316
!$316    continue
!$       ACCEPT 318...
!$       ASSIGN 318 TO I
!$       BACKSPACE(...,ERR=318,...)
!$       CALL I(...,*318,...,&320,...,$322)
!$       CLOSE(...,ERR=318,...)
!$       DECODE(...,318,...,ERR=320,...)
!$       DELETE(...,ERR=320,...)
!$       ENCODE(...,318,...,ERR=320,...)
!$       ENDFILE(...,ERR=318,...)
!$       FIND(...,ERR=320,...)
!$       FLUSH(...,ERR=318,...)
!$       GOTO 318
!$       GOTO I(318,320,322)
!$       GOTO I,(318,320,322)
!$       GOTO(318,320,322)...
!$       INQUIRE(...,ERR=318,...)
!$       OPEN(...,ERR=318,...)
!$       PRINT 318...
!$       READ 318...
!$       READ(...,318,...)
!$       READ(...,ERR=318,...,END=320,EOR=322,...,FMT=324)...
!$       REREAD 318...
!$       REREAD(...,318,...)
!$       REREAD(...,ERR=318,...,END=320,EOR=322,...,FMT=324)...
!$       REWIND(...,ERR=318,...)
!$       REWRITE(...,318) ...
!$       REWRITE(...,ERR=318,...,FMT=320,...,EOR=322)...
!$       TYPE 318...
!$       WAIT(...,ERR=318,...,END=320,...,EOR=322,...)
!$       WRITE(...,318) ...
!$       WRITE(...,ERR=318,...,FMT=320,...,EOR=322)...
#endif
!$318    continue
!$320    continue
!$322    continue
!$324    continue
      end subroutine suby1
      subroutine suby2
#if 0
!$
!$       if(...)  ACCEPT 326...
!$       if(...)  ASSIGN 326 TO I
!$       if(...)  BACKSPACE(...,ERR=326,...)
!$       if(...)  CALL I(...,*326,...,&328,...,$330)
!$       if(...)  CLOSE(...,ERR=326,...)
!$       if(...)  DECODE(...,326,...,ERR=328,...)
!$       if(...)  DELETE(...,ERR=328,...)
!$       if(...)  ENCODE(...,326,...,ERR=328,...)
!$       if(...)  ENDFILE(...,ERR=326,...)
!$       if(...)  FIND(...,ERR=328,...)
!$       if(...)  FLUSH(...,ERR=326,...)
!$       if(...)  GOTO 326
!$       if(...)  GOTO I(326,328,330)
!$       if(...)  GOTO I,(326,328,330)
!$       if(...)  GOTO(326,328,330)...
!$       if(...)  INQUIRE(...,ERR=326,...)
!$       if(...)  OPEN(...,ERR=326,...)
!$       if(...)  PRINT 326...
!$       if(...)  READ 326...
!$       if(...)  READ(...,326,...)
!$       if(...)  READ(...,ERR=326,...,END=328,EOR=330,...,FMT=332)...
!$       if(...)  REREAD 326...
!$       if(...)  REREAD(...,326,...)
!$       if(...)  REREAD(...,ERR=326,...,END=328,EOR=330,...,FMT=332)...
!$       if(...)  REWIND(...,ERR=326,...)
!$       if(...)  REWRITE(...,326) ...
!$       if(...)  REWRITE(...,ERR=326,...,FMT=328,...,EOR=330)...
!$       if(...)  TYPE 326...
!$       if(...)  WAIT(...,ERR=326,...,END=328,...,EOR=330,...)
!$       if(...)  WRITE(...,326) ...
!$       if(...)  WRITE(...,ERR=326,...,FMT=328,...,EOR=330)...
!$
#endif
!$326    continue
!$328    continue
!$330    continue
!$332    continue
      end subroutine

      subroutine old_dec
#if 0
         integer buf(20)
         read(5'1000,err=342) x
         read(abc '1000,err=342) x
         read(5#1000,err=342) x
         read(5#n,err=342) x
         read(5#n,334,err=342) x
         write(5#1000,err=342) x
         write(5#n,err=342) x
         call sub(&344,$342,*342)
         reread 336,x,y,z
         reread(3,336),x,y,z
         type 334,x,y,z
         type *,x,y,z
         type 334
         type *
         accept 336,x
         accept 336
         accept *,x
         encode(80,338,buf,x,y,z,err=342)
         decode(80,340,buf,x,y,z,err=344)
  334    format(3f10.4)
  336    format(f10.6)
  338    format(3f20.10)
  340    format(3f20.6)
  342    continue
  344    continue
#endif
      end

      subroutine abc
         ! no relabel possible, because of intervening preprocessor statement
         goto i,(20,4321
#ifdef trala
     &    ,20)
#else
     &     ,145,20)
#endif
10000    x=1
   20    x=1
 4321    x=1
 4322    x=1
  145    x=2
         assign 10000 to i

      end subroutine
      subroutine xyz
         ! no relabel possible, because of intervening preprocessor statement in previous subroutine
    1    continue

      end subroutine
